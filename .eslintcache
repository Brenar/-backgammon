[{"/Applications/MAMP/htdocs/-backgammon/src/index.js":"1","/Applications/MAMP/htdocs/-backgammon/src/history.js":"2","/Applications/MAMP/htdocs/-backgammon/src/App.js":"3","/Applications/MAMP/htdocs/-backgammon/src/redux/store.js":"4","/Applications/MAMP/htdocs/-backgammon/src/redux/reducer.js":"5","/Applications/MAMP/htdocs/-backgammon/src/components/desk/index.js":"6","/Applications/MAMP/htdocs/-backgammon/src/models/backgammon.js":"7","/Applications/MAMP/htdocs/-backgammon/src/utils.js":"8","/Applications/MAMP/htdocs/-backgammon/src/components/desk-aside/index.js":"9","/Applications/MAMP/htdocs/-backgammon/src/components/desk-line/index.js":"10"},{"size":492,"mtime":1612964180827,"results":"11","hashOfConfig":"12"},{"size":109,"mtime":1612964180827,"results":"13","hashOfConfig":"12"},{"size":242,"mtime":1613135459333,"results":"14","hashOfConfig":"12"},{"size":385,"mtime":1612964180831,"results":"15","hashOfConfig":"12"},{"size":446,"mtime":1612964180830,"results":"16","hashOfConfig":"12"},{"size":1695,"mtime":1613558921073,"results":"17","hashOfConfig":"12"},{"size":4132,"mtime":1613559820344,"results":"18","hashOfConfig":"12"},{"size":262,"mtime":1613556384804,"results":"19","hashOfConfig":"12"},{"size":1760,"mtime":1613557866716,"results":"20","hashOfConfig":"12"},{"size":1989,"mtime":1613560012620,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3mmutv",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Applications/MAMP/htdocs/-backgammon/src/index.js",[],"/Applications/MAMP/htdocs/-backgammon/src/history.js",[],"/Applications/MAMP/htdocs/-backgammon/src/App.js",[],"/Applications/MAMP/htdocs/-backgammon/src/redux/store.js",[],"/Applications/MAMP/htdocs/-backgammon/src/redux/reducer.js",[],"/Applications/MAMP/htdocs/-backgammon/src/components/desk/index.js",["44","45"],"import {connect} from 'react-redux'\nimport React from 'react'\nimport './style.scss'\nimport DeskAside from '../desk-aside'\n\nimport {\n  whiteDeskSelector,\n  blackDeskSelector,\n  blackScoreSelector,\n  whiteScoreSelector,\n  pointsSelector,\n  turnSelector,\n  initStartGame,\n  onChangeTurn,\n  onRollTheDices,\n} from '../../models/backgammon'\n\nconst deskSeparator = (desk) => {\n  const firstDesk = [],\n    secondDesk = []\n  for (let i = 0; i < desk.length; i++) {\n    if (i < 12) {\n      firstDesk.push(desk[i])\n    } else {\n      secondDesk.push(desk[i])\n    }\n  }\n  return [firstDesk, secondDesk]\n}\n\n\nexport function Desk(props) {\n  const {whiteDesk, blackDesk, blackScore, whiteScore, points, turn} = props\n  return (\n    <div className=\"Desk\">\n      {deskSeparator(whiteDesk).map((aside, asideKey) => {\n        return (\n          <DeskAside\n            asideData={aside}\n            asideKey={asideKey}\n            key={asideKey}\n            turn={turn}\n            points={points}\n            desk={blackDesk}\n          />\n        )\n      })}\n      {deskSeparator(blackDesk).map((aside, asideKey) => {\n        return (\n          <DeskAside\n            asideData={aside}\n            asideKey={asideKey}\n            key={asideKey}\n            turn={turn}\n            points={points}\n            desk={whiteDesk}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default connect(\n  (state) => ({\n    whiteDesk: whiteDeskSelector(state),\n    blackDesk: blackDeskSelector(state),\n    blackScore: blackScoreSelector(state),\n    whiteScore: whiteScoreSelector(state),\n    points: pointsSelector(state),\n    turn: turnSelector(state),\n  }),\n  {initStartGame, onChangeTurn, onRollTheDices}\n)(Desk)\n",["46","47"],"/Applications/MAMP/htdocs/-backgammon/src/models/backgammon.js",["48","49","50","51","52","53","54","55"],"/Applications/MAMP/htdocs/-backgammon/src/utils.js",[],"/Applications/MAMP/htdocs/-backgammon/src/components/desk-aside/index.js",["56","57","58"],"/Applications/MAMP/htdocs/-backgammon/src/components/desk-line/index.js",["59"],{"ruleId":"60","severity":1,"message":"61","line":34,"column":32,"nodeType":"62","messageId":"63","endLine":34,"endColumn":42},{"ruleId":"60","severity":1,"message":"64","line":34,"column":44,"nodeType":"62","messageId":"63","endLine":34,"endColumn":54},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":128,"column":41,"nodeType":"71","messageId":"72","endLine":128,"endColumn":43},{"ruleId":"69","severity":1,"message":"70","line":130,"column":43,"nodeType":"71","messageId":"72","endLine":130,"endColumn":45},{"ruleId":"69","severity":1,"message":"70","line":147,"column":41,"nodeType":"71","messageId":"72","endLine":147,"endColumn":43},{"ruleId":"69","severity":1,"message":"70","line":149,"column":43,"nodeType":"71","messageId":"72","endLine":149,"endColumn":45},{"ruleId":"69","severity":1,"message":"70","line":161,"column":33,"nodeType":"71","messageId":"72","endLine":161,"endColumn":35},{"ruleId":"69","severity":1,"message":"70","line":162,"column":22,"nodeType":"71","messageId":"72","endLine":162,"endColumn":24},{"ruleId":"69","severity":1,"message":"70","line":171,"column":33,"nodeType":"71","messageId":"72","endLine":171,"endColumn":35},{"ruleId":"69","severity":1,"message":"70","line":172,"column":22,"nodeType":"71","messageId":"72","endLine":172,"endColumn":24},{"ruleId":"73","severity":1,"message":"74","line":20,"column":61,"nodeType":"75","messageId":"76","endLine":20,"endColumn":63},{"ruleId":"73","severity":1,"message":"74","line":23,"column":61,"nodeType":"75","messageId":"76","endLine":23,"endColumn":63},{"ruleId":"73","severity":1,"message":"74","line":26,"column":73,"nodeType":"75","messageId":"76","endLine":26,"endColumn":75},{"ruleId":"69","severity":1,"message":"70","line":33,"column":32,"nodeType":"71","messageId":"72","endLine":33,"endColumn":34},"no-unused-vars","'blackScore' is assigned a value but never used.","Identifier","unusedVar","'whiteScore' is assigned a value but never used.","no-native-reassign",["77"],"no-negated-in-lhs",["78"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]