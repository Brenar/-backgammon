[{"/Applications/MAMP/htdocs/-backgammon/src/index.js":"1","/Applications/MAMP/htdocs/-backgammon/src/history.js":"2","/Applications/MAMP/htdocs/-backgammon/src/App.js":"3","/Applications/MAMP/htdocs/-backgammon/src/redux/store.js":"4","/Applications/MAMP/htdocs/-backgammon/src/redux/reducer.js":"5","/Applications/MAMP/htdocs/-backgammon/src/components/desk/index.js":"6","/Applications/MAMP/htdocs/-backgammon/src/models/backgammon.js":"7","/Applications/MAMP/htdocs/-backgammon/src/utils.js":"8","/Applications/MAMP/htdocs/-backgammon/src/components/desk-aside/index.js":"9","/Applications/MAMP/htdocs/-backgammon/src/components/desk-line/index.js":"10"},{"size":492,"mtime":1612964180827,"results":"11","hashOfConfig":"12"},{"size":109,"mtime":1612964180827,"results":"13","hashOfConfig":"12"},{"size":242,"mtime":1613135459333,"results":"14","hashOfConfig":"12"},{"size":385,"mtime":1612964180831,"results":"15","hashOfConfig":"12"},{"size":446,"mtime":1612964180830,"results":"16","hashOfConfig":"12"},{"size":1685,"mtime":1614257967509,"results":"17","hashOfConfig":"12"},{"size":4407,"mtime":1614258396198,"results":"18","hashOfConfig":"12"},{"size":262,"mtime":1613556384804,"results":"19","hashOfConfig":"12"},{"size":3155,"mtime":1614257312916,"results":"20","hashOfConfig":"12"},{"size":2646,"mtime":1614258015471,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"3mmutv",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Applications/MAMP/htdocs/-backgammon/src/index.js",[],["44","45"],"/Applications/MAMP/htdocs/-backgammon/src/history.js",[],"/Applications/MAMP/htdocs/-backgammon/src/App.js",[],"/Applications/MAMP/htdocs/-backgammon/src/redux/store.js",[],"/Applications/MAMP/htdocs/-backgammon/src/redux/reducer.js",[],"/Applications/MAMP/htdocs/-backgammon/src/components/desk/index.js",["46","47"],"/Applications/MAMP/htdocs/-backgammon/src/models/backgammon.js",["48","49","50","51","52","53","54","55"],"/Applications/MAMP/htdocs/-backgammon/src/utils.js",[],"/Applications/MAMP/htdocs/-backgammon/src/components/desk-aside/index.js",["56","57","58","59","60"],"import React, {useState} from 'react'\nimport './style.scss'\nimport DeskLine from '../desk-line'\n\nconst handleCheckCheckerCarry = (line, setActiveChecker, checkedLineId, points, desk, setActiveLines, turn) => {\n  if (line[0] === 1 && turn === 'white') {\n    setActiveChecker(checkedLineId)\n    let lines = []\n    if (points.length === 2) {\n      if ((points[0] + checkedLineId) <= 24) {\n        if (desk[points[0] + checkedLineId - 1].length === 0 || desk[points[0] + checkedLineId - 1][0] === 1)\n          lines.push({point: points[0], lineId: points[0] + checkedLineId})\n      } else {\n\n      }\n      if (desk[points[1] + checkedLineId - 1].length === 0 || desk[points[0] + checkedLineId - 1][0] === 1) {\n        if (getMaxLineId(lines) <= 24) {\n          lines.push({point: points[1], lineId: points[1] + checkedLineId})\n        } else {\n          lines.push({point: points[1], lineId: 12 - ((points[1] + checkedLineId) - 24)})\n        }\n      }\n      if (desk[points[0] + points[1] + checkedLineId - 1].length === 0 && lines.length !== 0 || desk[points[0] + checkedLineId - 1][0] === 1) {\n        if (points[0] + points[1] + checkedLineId <= 24) {\n          lines.push({point: points[0] + points[1], lineId: points[0] + points[1] + checkedLineId})\n        } else {\n          lines.push({point: points[0] + points[1], lineId: 12 - ((points[0] + points[1] + checkedLineId) - 24)})\n        }\n      }\n      setActiveLines(lines)\n    }\n  } else if(line[0] === 0 && turn === 'black') {\n    setActiveChecker(checkedLineId)\n    let lines = []\n    if (points.length === 2) {\n      if (desk[points[0] + checkedLineId - 1].length === 0 || desk[points[0] + checkedLineId - 1][0] === 0) {\n        lines.push(points[0] + checkedLineId)\n      }\n      if (desk[points[1] + checkedLineId - 1].length === 0 || desk[points[0] + checkedLineId - 1][0] === 0) {\n        lines.push(points[1] + checkedLineId)\n      }\n      if (desk[points[0] + points[1] + checkedLineId - 1].length === 0 && lines.length !== 0 || desk[points[0] + checkedLineId - 1][0] === 0) {\n        lines.push(points[0] + points[1] + checkedLineId)\n      }\n      setActiveLines(lines)\n      console.log(lines)\n    }\n  }\n}\n\nconst getMaxLineId = activeLines => {\n  let maxId = 0\n  activeLines.map(line => {\n    if (line.lineId > maxId) {\n      maxId = line.lineId\n    }\n  })\n  return maxId\n}\n\nconst DeskAside = ({asideData, asideKey, turn, points, desk}) => {\n  const [activeChecker, setActiveChecker] = useState(null)\n  const [activeLines, setActiveLines] = useState([])\n\n  return (\n    <div className=\"deskAsideWhite\">\n      {asideData.map((line, key) => {\n        const checkedLineId = ((key + 1) * (asideKey)) + 12\n        return (\n          <DeskLine\n            handleCheckChecker={() => handleCheckCheckerCarry(line, setActiveChecker, checkedLineId, points, desk, setActiveLines, turn)}\n            activeChecker={activeChecker}\n            key={key}\n            DeskKey={key}\n            line={line}\n            checkedLineId={checkedLineId}\n            activeLines={activeLines}\n            setActiveLines={setActiveLines}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default DeskAside","/Applications/MAMP/htdocs/-backgammon/src/components/desk-line/index.js",["61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":33,"column":32,"nodeType":"68","messageId":"69","endLine":33,"endColumn":42},{"ruleId":"66","severity":1,"message":"70","line":33,"column":44,"nodeType":"68","messageId":"69","endLine":33,"endColumn":54},{"ruleId":"71","severity":1,"message":"72","line":131,"column":38,"nodeType":"73","messageId":"74","endLine":131,"endColumn":40},{"ruleId":"71","severity":1,"message":"72","line":133,"column":55,"nodeType":"73","messageId":"74","endLine":133,"endColumn":57},{"ruleId":"71","severity":1,"message":"72","line":151,"column":41,"nodeType":"73","messageId":"74","endLine":151,"endColumn":43},{"ruleId":"71","severity":1,"message":"72","line":153,"column":43,"nodeType":"73","messageId":"74","endLine":153,"endColumn":45},{"ruleId":"71","severity":1,"message":"72","line":165,"column":33,"nodeType":"73","messageId":"74","endLine":165,"endColumn":35},{"ruleId":"71","severity":1,"message":"72","line":166,"column":22,"nodeType":"73","messageId":"74","endLine":166,"endColumn":24},{"ruleId":"71","severity":1,"message":"72","line":175,"column":33,"nodeType":"73","messageId":"74","endLine":175,"endColumn":35},{"ruleId":"71","severity":1,"message":"72","line":176,"column":22,"nodeType":"73","messageId":"74","endLine":176,"endColumn":24},{"ruleId":"75","severity":1,"message":"76","line":23,"column":72,"nodeType":"77","messageId":"78","endLine":23,"endColumn":74},{"ruleId":"75","severity":1,"message":"76","line":23,"column":94,"nodeType":"77","messageId":"78","endLine":23,"endColumn":96},{"ruleId":"75","severity":1,"message":"76","line":42,"column":72,"nodeType":"77","messageId":"78","endLine":42,"endColumn":74},{"ruleId":"75","severity":1,"message":"76","line":42,"column":94,"nodeType":"77","messageId":"78","endLine":42,"endColumn":96},{"ruleId":"71","severity":1,"message":"72","line":53,"column":24,"nodeType":"73","messageId":"74","endLine":53,"endColumn":26},{"ruleId":"71","severity":1,"message":"72","line":37,"column":32,"nodeType":"73","messageId":"74","endLine":37,"endColumn":34},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'blackScore' is assigned a value but never used.","Identifier","unusedVar","'whiteScore' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation"]